services:
  api:
    # Standardized container naming
    container_name: nxsGPT-API
    # Resource limits for production stability
    mem_limit: 2G
    cpus: 1.0
    # Enhanced health check for container monitoring
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3080/", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # Security improvements
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
    # Enhanced logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mongodb:
    # Standardized container naming
    container_name: nxsGPT-MongoDB
    # Resource limits for MongoDB
    mem_limit: 2G
    cpus: 1.0
    # Health check for MongoDB
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    # Security improvements
    security_opt:
      - no-new-privileges:true
    # Enhanced logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  meilisearch:
    # Standardized container naming
    container_name: nxsGPT-MeiliSearch
    # Resource limits for MeiliSearch
    mem_limit: 1G
    cpus: 0.75
    # Enhanced health check
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:7700/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    # Security improvements
    security_opt:
      - no-new-privileges:true
    # Enhanced logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  vectordb:
    # Standardized container naming
    container_name: nxsGPT-VectorDB
    # Resource limits for PostgreSQL/pgvector
    mem_limit: 1G
    cpus: 0.75
    # Health check for PostgreSQL
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    # Security improvements
    security_opt:
      - no-new-privileges:true
    # Enhanced logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  rag_api:
    # Standardized container naming
    container_name: nxsGPT-RAG-API
    # Resource limits for RAG API
    mem_limit: 1G
    cpus: 0.5
    # Enhanced health check
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/docs", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # Security improvements
    security_opt:
      - no-new-privileges:true
    # Enhanced logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # MongoDB backup service for data protection
  mongo-backup:
    image: mongo:5.0
    container_name: nxsGPT-Backup
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./backups:/backups
      - datanode:/data/db:ro
    environment:
      - MONGO_URI=mongodb://root:${MONGO_ROOT_PASSWORD:-mongoSecurePassword123}@mongodb:27017/nxsGPT?authSource=admin
    command:
      - sh
      - -c
      - |
        echo 'Starting MongoDB backup service...'
        echo 'Waiting for MongoDB to be ready...'
        until mongosh --eval "db.adminCommand('ping')" "$$MONGO_URI" --quiet; do
          echo 'MongoDB not ready, waiting...'
          sleep 5
        done
        echo 'MongoDB is ready, starting backup loop...'
        while true; do
          echo "Creating backup at $$(date)"
          mongodump --uri="$$MONGO_URI" --out /backups/$$(date +%Y%m%d_%H%M%S)
          if [ $$? -eq 0 ]; then
            echo 'Backup completed successfully'
          else
            echo 'Backup failed, will retry on next cycle'
          fi
          echo 'Cleaning up old backups (older than 7 days)'
          find /backups -type d -name '[0-9]*' -mtime +7 -exec rm -rf {} + 2>/dev/null || true
          echo 'Sleeping for 24 hours until next backup...'
          sleep 86400
        done
    restart: unless-stopped
    mem_limit: 256M
    cpus: 0.25
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

# Enhanced network security configuration
networks:
  default:
    name: nxsgpt-network
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16